# 1. Напишите программу, удаляющую из текста все слова, содержащие ""абв"".

str = input('Enter str: ').replace('абв', '').split(' ')
result = ' '.join(list(filter(lambda x: x != '', str)))
print(result)

# 2. Создайте программу для игры с конфетами человек против человека.

# Условие задачи: На столе лежит 2021 конфета. Играют два игрока, делая ход друг после друга. Первый ход определяется жеребьёвкой.
# За один ход можно забрать не более чем 28 конфет. Все конфеты оппонента достаются сделавшему последний ход.
# Сколько конфет нужно взять первому игроку, чтобы забрать все конфеты у своего конкурента? - в первый ход нужно взять 20 конфет, поскольку остаток от деления 2021 на 20 будет 1,
# и конфета достанется первому игроку. После каждого хода можно проверять остаток от деления пула на число конфет.

# a) Добавьте игру против бота
# b) Подумайте, как наделить бота "интеллектом"

from random import randint

def enter(name):
    x = int(input(f"{name}, введите количество конфет от 1 до 28: "))
    return x

def p_print(name, k, counter, pull):
    print(f"Ходил {name}, он взял {k}, у него на руках {counter}. Осталось на столе {pull} конфет.")

player1 = input("Enter the name of first player: ")
player2 = input("Enter the name of second player: ")
pull = 2021
who_go = randint(0,2) #жеребьёвка
if who_go:
    print(f"First move {player1}")
else:
    print(f"First move {player2}")

counter1 = 0 # счётчики конфет
counter2 = 0

while pull > 28:
    if who_go:
        k = enter(player1) # сколько ещё забирает
        counter1 += k # сколько у него конфет
        pull -= k # оставшееся кол-во конфет
        who_go = False
        p_print(player1, k, counter1, pull)
    else:
        k = enter(player2)
        counter2 += k
        pull -= k 
        who_go = True
        p_print(player2, k, counter2, pull)

if who_go:
    print(f"{player1} wins!")
else:
    print(f"{player2} wins!")

# если играть против бота, замеcто действий второго игрока, можно прописать выбор рандомного числа из промежутка {0,28}

# 3. Создайте программу для игры в ""Крестики-нолики"".



# 4. Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.
